-	In CentOS Linux server and become root user. Create a Docker directory. 
mkdir Docker
cd Docker
-	In Docker directory, Create a index.html.
vim index.html
<html>
<body>
<h1> “Hello World” </h1>
</body>
</html>
-	In a Docker directory, Create a Dockerfile.
FROM nginx:alpine
COPY index.html /usr/share/nginx/html/
-	Build the image using docker build. Docker is the directory where Dockerfile is present and -t option is to tag or name the image.
docker build -t nginxwebserver:v1 .
-	Run Docker imgae.
docker run -dit -p 8081:80 nginxwebserver:v1
To result on web browser.
-	curl localhost:8081
-	Ifconfig
docker0 – inet:172.17.0.1
So, for test we can write in a web browser
172.17.0.1:8081 

RUN — Before building an image if want some configuration that needs to be present in the image. Inside the image we need to install Apache web server image the command to install that image is

RUN yum –y install httpd

COPY- This command is used to copy a file from host os to docker container

COPY index.html /var/www/html

EXPOSE- This command is used to specify the port number in which the container is running its process. Anybody can come from outside and connect to this port. Apache webserver is launched at port 80 by default that is why we need to expose container at port 80.

EXPOSE 80

CMD- To run a command as soon as container is launched. CMD command is different from RUN because RUN is used at the time of building an image and CMD used to run command when container is started.

/usr/sbin/httpd- This command is used to start the web server

-DFOREGROUND — This is not a docker command this is http server argument which is used to run webserver in background. If we do not use this argument the server will start and then it will stop.

CMD [“/usr/sbin/httpd”,” -D”,” FOREGROUND”]
